# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import slp_graphsearchrpc_pb2 as slp__graphsearchrpc__pb2


class GraphSearchServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GraphSearch = channel.unary_unary(
        '/graphsearch.GraphSearchService/GraphSearch',
        request_serializer=slp__graphsearchrpc__pb2.GraphSearchRequest.SerializeToString,
        response_deserializer=slp__graphsearchrpc__pb2.GraphSearchReply.FromString,
        )


class GraphSearchServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GraphSearch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GraphSearchServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GraphSearch': grpc.unary_unary_rpc_method_handler(
          servicer.GraphSearch,
          request_deserializer=slp__graphsearchrpc__pb2.GraphSearchRequest.FromString,
          response_serializer=slp__graphsearchrpc__pb2.GraphSearchReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'graphsearch.GraphSearchService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
